@using RSSolution.ViewModels.Common;
@model PagedResult<RSSolution.ViewModels.Catalog.Meals.MealVm>
@{ ViewData["Title"] = "Index";
    Layout = "_Layout"; }
@section Scripts{
    <script>setTimeout(function () {
            $('#msgAlert').fadeOut('slow');
        }, 2000);</script>
}
<div id="page-wrapper">
    <div class="main-page">
        <center><h1 class="mt-4">Meal</h1></center><hr />
        <div class="card mb-12">
            <div class="card-header">
                <div class="row">
                    <div class="col-md-10 col-xs-12">
                        <form asp-action="Index" method="get">
                            <div class="row">
                                <div class="col-md-4">
                                    <input type="text" value="@ViewBag.Keyword" name="keyword" class="form-control" />
                                </div>
                                <div class="col-md-4">
                                    <select name="mealCategoryId" onchange="this.form.submit()" asp-items="@ViewBag.MealCategories" class="form-control">
                                        <option>--Select Category--</option>
                                    </select>
                                </div>
                                <div class="cold-md-3">
                                    <button type="submit" class="btn btn-primary">Search</button>
                                    <button type="button" onclick="window.location.href='/Meal/Index'" class="btn btn-dark">Reset</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <div class="card-body">
                <div class="row">
                    @if (ViewBag.SuccessMsg != null)
                    {
        <div id="msgAlert" class="alert alert-success" role="alert">
            @ViewBag.SuccessMsg
        </div>}<a class="btn btn-success" asp-action="Create" asp-controller="Meal">Create New</a>
                </div>
                <div class="table-responsive">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>
                                    ID
                                </th>
                                <th>
                                    Name
                                </th>
                                <th>
                                    Price
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                        @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.Id }) |
                        @Html.ActionLink("CategoryAssign", "CategoryAssign", new { id = item.Id }) |
                    </td>
                </tr>
}
                        </tbody>
                    </table>
                </div>
                @await Component.InvokeAsync("Pager", Model)
            </div>
        </div>
    </div>
</div>
